<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api</name>
    </assembly>
    <members>
        <member name="T:FeChat.Controllers.Administrator.Dashboard.ReadController">
            <summary>
            Read Controller for Dashboard
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Dashboard.ReadController.DashboardData(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository)">
            <summary>
            Gets the data from database for the administrator dashboard
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="subscriptionsRepository">An instance to the Subscriptions repository</param>
            <param name="eventsRepository">An instance to the Events repository</param>
            <returns>IActionResult with dashboard content</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Dashboard.ReadController.DashboardMembers(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Gets the members from database for the administrator dashboard
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>IActionResult with response</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Events.ReadController">
            <summary>
            Read Events Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Events.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Events.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Events.ReadController.List(FeChat.Models.Dtos.EventsSearchDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository)">
            <summary>
            Get the list with events
            </summary>
            <param name="eventsSearchDto">Events search parameters</param>
            <param name="membersRepository">An instance to the members repository</param>
            <param name="eventsRepository">An instance to the events repository</param>
            <returns>Events list or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Members.CreateController">
            <summary>
            Members Create Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.CreateController.CreateMember(FeChat.Models.Dtos.Members.NewMemberDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Create a member
            </summary>
            <param name="newMemberDto">Data transfer object with member information</param>
            <param name="membersRepository">Contains a session to the Members repository</param>
            <returns>Message if the member was created or error</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Members.DeleteController">
            <summary>
            This controller gets the member's basic information
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.DeleteController._membersRepository">
            <summary>
            Members Repository container
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.DeleteController._eventsRepository">
            <summary>
            Events Repository container
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.DeleteController._subscriptionsRepository">
            <summary>
            Subscriptions Repository container
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.DeleteController._websitesRepository">
            <summary>
            Websites Repository container
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.DeleteController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.DeleteController.#ctor(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="eventsRepository">Contains an instance to the Events repository</param>
            <param name="subscriptionsRepository">Contains an instance to the Subscriptions repository</param>
            <param name="websitesRepository">Contains an instance to the Websites repository</param>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.DeleteController.DeleteMember(System.Int32,FeChat.Utils.General.Member)">
            <summary>
            Delete a member
            </summary>
            <param name="memberId">Contains the member's ID</param>
            <param name="memberInfo">Member logged information</param>
            <returns>Message if the member was deleted or error</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Members.Options.UpdateController">
            <summary>
            Members Options Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.Options.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.Options.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.Options.UpdateController.Options(FeChat.Models.Dtos.Members.OptionsDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Gets the member information
            </summary>
            <param name="optionsDto">Contains the member's options</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success message or error message for save changes</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Members.ReadController">
            <summary>
            Members Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.ReadController.List(FeChat.Models.Dtos.SearchDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Get the list with members
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="membersRepository">An instance to the members repository</param>
            <returns>List with members or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.ReadController.Export(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Get the list with members to export
            </summary>
            <param name="membersRepository">An instance to the members repository</param>
            <returns>Exports the members list or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.ReadController.Member(System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Gets the member information
            </summary>
            <param name="MemberId">Contains the member's ID</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="subscriptionsRepository">Contains an instance to the Subscriptions repository</param>
            <param name="plansRepository">Plans repository instance</param>
            <returns>Member information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Members.UpdateController">
            <summary>
            Members Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Members.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.UpdateController.UpdateMemberProfile(FeChat.Models.Dtos.Members.UpdateMemberDto,System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Update the member profile
            </summary>
            <param name="updateMemberDto">Contains the received information</param>
            <param name="MemberId">Contains the member's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="subscriptionsRepository">Contains an instance to the Subscriptions repository</param>
            <param name="plansRepository">Contains an instance to the Plans repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.UpdateController.UpdateMemberPassword(FeChat.Models.Dtos.Members.MemberDto,System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member password
            </summary>
            <param name="memberDto">Contains the received information</param>
            <param name="MemberId">Contains the member's ID</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Members.UpdateController.UpdateMemberImage(Microsoft.AspNetCore.Http.IFormFile,System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member profile image
            </summary>
            <param name="file">Contains the uploaded file</param>
            <param name="MemberId">Contains the member's ID</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.CreateController">
            <summary>
            Plans Create Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.CreateController.CreatePlan(FeChat.Models.Dtos.Plans.PlanDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Create a plan
            </summary>
            <param name="planDto">Data transfer object with plan information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="plansRepository">Instance for the plans repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.DeleteController">
            <summary>
            Plans Delete Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.DeleteController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.DeleteController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.DeleteController.DeletePlan(System.Int32,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository)">
            <summary>
            Delete a plan
            </summary>
            <param name="planId">Contains the plan's ID</param>
            <param name="plansRepository">Contains a session to the Plans repository</param>
            <param name="subscriptionsRepository">Contains a session to the Subscriptions repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.Features.UpdateController">
            <summary>
            Plans Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.Features.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.Features.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.Features.UpdateController.SaveFeatures(System.String[],System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Save or update the plans features
            </summary>
            <param name="featuresList">Received features for saving</param>
            <param name="planId">Plan ID</param>
            <param name="membersRepository">An instance for the members repository</param>
            <param name="plansRepository">An instance for the plans repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.ReadController">
            <summary>
            Plans Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.ReadController.PlansList(FeChat.Models.Dtos.SearchDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Get the list with plans
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="plansRepository">An instance to the plans repository</param>
            <returns>Plans list or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.ReadController.PlanInfo(System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Gets the plan information
            </summary>
            <param name="planId">Contains the plan's ID</param>
            <param name="members">Contains an instance to the Members repository</param>
            <param name="plansRepository">Contains a session to the plans repository</param>
            <returns>Plan data or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.Restrictions.UpdateController">
            <summary>
            Plans Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.Restrictions.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.Restrictions.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.Restrictions.UpdateController.SaveRestrictions(FeChat.Models.Dtos.Plans.RestrictionsDto,System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Save or update the plans restrictions
            </summary>
            <param name="restrictionsDto">Received restrictions for saving</param>
            <param name="PlanId">Plan ID</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="plansRepository">An instance for the plans repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Plans.UpdateController">
            <summary>
            Plans Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Plans.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Plans.UpdateController.UpdatePlanBasic(FeChat.Models.Dtos.Plans.PlanDto,System.Int32,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Update the plan basic informations
            </summary>
            <param name="planDto">Contains the received information</param>
            <param name="PlanId">Contains the plan's ID</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="plansRepository">Plans repository instance</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Settings.ReadController">
            <summary>
            Plans Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Settings.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Settings.ReadController.#ctor(FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Settings controller constructor
            </summary>
            <param name="settingsRepository">An instance for the settings repository</param>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Settings.ReadController.OptionsList(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Get the list with options
            </summary>
            <param name="membersRepository">Session for members repository</param>
            <returns>Requested options</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Settings.ReadController.AllOptions(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Get the list with options
            </summary>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Requested options</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Settings.UpdateController">
            <summary>
            Plans Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Settings.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Settings.UpdateController.#ctor(FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Settings controller constructor
            </summary>
            <param name="settingsRepository">An instance for the settings repository</param>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Settings.UpdateController.UpdateOptions(FeChat.Models.Dtos.Settings.OptionsDto)">
            <summary>
            Update the options
            </summary>
            <param name="optionsDto">Options to update</param>
            <returns>Update response</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.Transactions.ReadController">
            <summary>
            Transactions Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.Transactions.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Transactions.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Transactions.ReadController.TransactionsList(FeChat.Models.Dtos.SearchDto,System.Nullable{System.Int32},FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository)">
            <summary>
            Get the list with transactions
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="planId">Plan Id</param>
            <param name="subscriptionsRepository">An instance to the Subscription repository</param>
            <returns>Transactions list or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Administrator.Transactions.ReadController.Transaction(System.Int32,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository)">
            <summary>
            Gets the transaction information
            </summary>
            <param name="transactionId">Contains the transaction's ID</param>
            <param name="subscriptionsRepository">An instance to the Subscription repository</param>
            <returns>Transaction details or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Administrator.UploadController">
            <summary>
            Upload Manager
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Administrator.UploadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Administrator.UploadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Administrator.UploadController.Image(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Update the options
            </summary>
            <param name="file">Uploaded image</param>
            <returns>Update response</returns>
        </member>
        <member name="T:FeChat.Controllers.Auth.GoogleController">
            <summary>
            This controller is used to login or sign up user with Google
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Auth.GoogleController._configuration">
            <summary>
            App configuration container
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Auth.GoogleController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="configuration">
            App configuration
            </param>
        </member>
        <member name="M:FeChat.Controllers.Auth.GoogleController.Access(FeChat.Models.Dtos.Members.GoogleDto,FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository)">
            <summary>
            This method validates the member's data and creates an account
            </summary>
            <param name="googleDto">Google data</param>
            <param name="settingsRepository">An instance for the settings repository</param>
            <param name="membersRepository">Contains a session to the Members repository</param>
            <param name="eventsRepository">Contains a session to the Events repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Auth.RegistrationController">
            <summary>
            This controller is used to create new accounts
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Auth.RegistrationController._configuration">
            <summary>
            App configuration container
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Auth.RegistrationController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="configuration">
            App configuration
            </param>
        </member>
        <member name="M:FeChat.Controllers.Auth.RegistrationController.Registration(FeChat.Models.Dtos.Members.NewMemberDto,FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository)">
            <summary>
            This method validates the member's data and creates an account
            </summary>
            <param name="newMemberDto">Data transfer object with member information</param>
            <param name="settingsRepository">An instance for the settings repository</param>
            <param name="membersRepository">Contains a session to the Members repository</param>
            <param name="eventsRepository">Contains a session to the Events repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Auth.ResetController">
            <summary>
            This controller creates a session
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Auth.ResetController._configuration">
            <summary>
            App configuration container
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Auth.ResetController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="configuration">
            App configuration
            </param>
        </member>
        <member name="M:FeChat.Controllers.Auth.ResetController.Reset(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            This method creates a reset code
            </summary>
            <param name="member">Data transfer object with member information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Auth.ResetController.Validate(System.String,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            This method validates a reset code
            </summary>
            <param name="code">Reset code which should be validated</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Auth.ResetController.UpdateMemberPassword(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member password
            </summary>
            <param name="memberDto">Contains the received information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Auth.SignInController">
            <summary>
            This controller creates a session
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Auth.SignInController._configuration">
            <summary>
            App configuration container
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Auth.SignInController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="configuration">
            App configuration
            </param>
        </member>
        <member name="M:FeChat.Controllers.Auth.SignInController.SignIn(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            This methods verifies if the member's information is valid
            </summary>
            <param name="member">Data transfer object with member information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success message and member's data or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.CsrfController">
            <summary>
            Anti-CSRF tokens generator
            </summary>
        </member>
        <member name="F:FeChat.Controllers.CsrfController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.CsrfController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.CsrfController.Generate(Microsoft.AspNetCore.Antiforgery.IAntiforgery)">
            <summary>
            Generate an Anti-CSRF token
            </summary>
            <returns>Csrf token or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.Messages.CreateController">
            <summary>
            Create Messages Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Messages.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Messages.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Public.Messages.CreateController.CreateMessage(FeChat.Models.Dtos.Messages.MessageDto,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Create a message
            </summary>
            <param name="messageDto">Message content</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.Public.Messages.CreateController.CreateMessageAttachments(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile},System.Int32,System.String,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Create a message with attachments
            </summary>
            <param name="files">Uploaded files</param>
            <param name="websiteId">Website Id</param>
            <param name="threadSecret">Thread Secret</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns>Upload response</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.Messages.ReadController">
            <summary>
            Create Messages Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Messages.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Messages.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Public.Messages.ReadController.MessagesList(FeChat.Models.Dtos.Messages.MessagesListDto,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Gets the messages
            </summary>
            <param name="messagesListDto">Parameters to list the messages</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns></returns>
        </member>
        <member name="T:FeChat.Controllers.Public.Plans.ReadController">
            <summary>
            Plans Read Controller
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Plans.ReadController.PlansList(FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Gets the Plans
            </summary>
            <param name="plansRepository">An instance for the plans repository</param>
            <returns>List with plans or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.Threads.CreateController">
            <summary>
            Create Threads Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Threads.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Threads.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Public.Threads.CreateController.CreateThread(FeChat.Models.Dtos.Messages.NewThreadDto,FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Create a new thread
            </summary>
            <param name="newThreadDto">Message content</param>
            <param name="settingsRepository">An instance to the Settings repository</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns>Success message or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.Threads.UpdateController">
            <summary>
            Threads Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Threads.UpdateController._websitesRepository">
            <summary>
            Container for Websites Repository
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Threads.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Threads.UpdateController.#ctor(FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="websitesRepository">An instance to the websites repository</param>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.Public.Threads.UpdateController.TypingActive(System.Int32,System.String,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Update the typing status
            </summary>
            <param name="websiteId">Website Id</param>
            <param name="threadSecret">Thread Secret</param>
            <param name="messagesRepository">An instance to the messages repository</param>
            <returns>Thread information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.WebhookController">
            <summary>
            Webhook Controller
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.WebhookController.WebhookRequest(FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository)">
            <summary>
            Receive the webhook request
            </summary>
            <returns>Empty result</returns>
        </member>
        <member name="M:FeChat.Controllers.Public.WebhookController.MyRegex">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match '&lt;'.<br/>
            ○ Match a character other than '&gt;' atomically any number of times.<br/>
            ○ Match '&gt;'.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:FeChat.Controllers.Public.Websites.ReadController">
            <summary>
            Websites Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.Websites.ReadController._websitesRepository">
            <summary>
            Container for Websites Repository
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.Websites.ReadController.#ctor(FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Read Controller Constructor
            </summary>
            <param name="websitesRepository">An instance to the websites repository</param>
        </member>
        <member name="M:FeChat.Controllers.Public.Websites.ReadController.WebsiteInfo(System.Int32)">
            <summary>
            Gets the website information
            </summary>
            <param name="websiteId">Contains the website's ID</param>
            <returns>Website information or error message</returns>
            <returns>Website information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.Public.WebSocketController">
            <summary>
            Websocket Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.Public.WebSocketController.webSocketActive">
            <summary>
            Websocket Status
            </summary>
        </member>
        <member name="M:FeChat.Controllers.Public.WebSocketController.QueueRequest(Microsoft.AspNetCore.Http.HttpContext,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Receive the WebSocket request
            </summary>
            <param name="context">Information about HTTP request</param>
            <param name="messagesRepository">Instance for messages repository</param>
            <returns>Empty result</returns>
        </member>
        <member name="T:FeChat.Controllers.SettingsController">
            <summary>
            Settings Reader
            </summary>
        </member>
        <member name="M:FeChat.Controllers.SettingsController.GetSettings(FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository)">
            <summary>
            Gets the settings for website and member
            </summary>
            <param name="settingsRepository">An instance for the settings repository</param>
            <param name="membersRepository">Session for members repository</param>
            <param name="subscriptionsRepository">An instance to the Subscription repository</param>
            <param name="plansRepository">Contains a session to the plans repository</param>
            <returns>List with settings</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Dashboard.ReadController">
            <summary>
            Read Controller for Dashboard
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Dashboard.ReadController.DashboardData(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Gets the data from database for the user dashboard
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="messagesRepository">Contains an instance to the Messages repository</param>
            <returns>IActionResult with response</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Dashboard.ReadController.DashboardThreads(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Gets the threads from database for the administrator dashboard
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="messagesRepository">Contains an instance to the Messages repository</param>
            <returns>IActionResult with response</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Gateways.ReadController">
            <summary>
            Gateways Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Gateways.ReadController._httpClient">
            <summary>
            Http Client container
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Gateways.ReadController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Class Constructor
            </summary>
            <param name="httpClient">Http Client</param>
        </member>
        <member name="M:FeChat.Controllers.User.Gateways.ReadController.GatewaysList(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository)">
            <summary>
            Gets the Gateways List
            </summary>
            <param name="planId">Plan Id</param>
            <param name="memberInfo">Member logged information</param>
            <param name="settingsRepository">An instance to the Settings repository</param>
            <param name="plansRepository">An instance to the Plans repository</param>
            <param name="subscriptionsRepository">An instance to the Subscriptions repository</param>
            <returns>List with gateways or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Messages.CreateController">
            <summary>
            Create Messages Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Messages.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Messages.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Messages.CreateController.CreateMessage(FeChat.Models.Dtos.Messages.MessageDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Create a message
            </summary>
            <param name="messageDto">Message content</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Messages.CreateController.CreateMessageAttachments(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile},System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Create a message with attachments
            </summary>
            <param name="files">Uploaded files</param>
            <param name="threadId">Thread Id</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">An instance for the websites repository</param>
            <param name="messagesRepository">An instance for the messages repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.ReadController">
            <summary>
            Members Read Controller
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.ReadController.Profile(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Gets the member information
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>IActionResult with member information</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Profile.UpdateController">
            <summary>
            Members Options Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Profile.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.Options(FeChat.Models.Dtos.Members.OptionsDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Gets the member information
            </summary>
            <param name="optionsDto">Contains the member's options</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Options list or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.UpdateProfile(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member profile
            </summary>
            <param name="memberDto">Contains the received information</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.UpdateMemberPassword(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member password
            </summary>
            <param name="memberDto">Contains the received information</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.UpdateNotificationsPassword(FeChat.Models.Dtos.Members.MemberDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member notifications settings
            </summary>
            <param name="memberDto">Contains the received information</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Profile.UpdateController.UpdateMemberImage(Microsoft.AspNetCore.Http.IFormFile,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Update the member profile image
            </summary>
            <param name="file">Contains the uploaded file</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
        </member>
        <member name="T:FeChat.Controllers.User.Subscriptions.CreateController">
            <summary>
            Create Subscription Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Subscriptions.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Subscriptions.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Subscriptions.CreateController.Create(FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository)">
            <summary>
            Create Subscriptions
            </summary>
            <param name="newSubscriptionDto">Subscriptions Details</param>
            <param name="memberInfo">Member logged information</param>
            <param name="settingsRepository">An instance to the Settings repository</param>
            <param name="plansRepository">An instance to the Plans repository</param>
            <param name="subscriptionsRepository">An instance to the Subscription repository</param>
            <param name="eventsRepository">Contains a session to the Events repository</param>
            <returns>Success or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Threads.DeleteController">
            <summary>
            Threads Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Threads.DeleteController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.DeleteController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.DeleteController.DeleteThread(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Delete a thread
            </summary>
            <param name="threadId">Contains the thread's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="messagesRepository">An instance to the messages repository</param>
            <returns>Message about the thread status</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Threads.ReadController">
            <summary>
            Threads Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Threads.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.ReadController.List(FeChat.Models.Dtos.SearchDto,System.Nullable{System.Int32},FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Get the threads list
            </summary>
            <param name="searchDto">Search information</param>
            <param name="websiteId">Optionally Website Id</param>
            <param name="memberInfo">Member logged information</param>
            <param name="messagesRepository">Instance for Threads repository</param>
            <returns>The list with threads or text message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.ReadController.Last(FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Get the last updated threads
            </summary>
            <param name="memberInfo">Member logged information</param>
            <param name="messagesRepository">Instance for Messages repository</param>
            <returns>The list with threads or text message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.ReadController.Thread(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Gets the thread information
            </summary>
            <param name="threadId">Contains the thread's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="membersRepository">Contains an instance to the Members repository</param>
            <param name="messagesRepository">An instance to the messages repository</param>
            <returns>Thread information or error message</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.ReadController.ThreadMessages(FeChat.Models.Dtos.SearchDto,System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Gets the thread messages
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="threadId">Contains the thread's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="messagesRepository">An instance to the messages repository</param>
            <returns>Thread information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Threads.UpdateController">
            <summary>
            Threads Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Threads.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Threads.UpdateController.TypingActive(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Update the typing status
            </summary>
            <param name="threadId">Contains the thread's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="messagesRepository">An instance to the Messages repository</param>
            <returns>Thread information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.UserWebSocketController">
            <summary>
            Websocket Controller for User
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.UserWebSocketController.webSocketActive">
            <summary>
            Websocket Status
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.UserWebSocketController.QueueRequest(Microsoft.AspNetCore.Http.HttpContext,FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository,FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository)">
            <summary>
            Receive the WebSocket request
            </summary>
            <param name="context">Information about HTTP request</param>
            <param name="membersRepository">Instance for members repository</param>
            <param name="messagesRepository">Instance for messages repository</param>
            <returns>Empty result</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Websites.CreateController">
            <summary>
            Plans Create Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Websites.CreateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.CreateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.CreateController.CreateWebsite(FeChat.Models.Dtos.Websites.NewWebsiteDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository,FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Save a website
            </summary>
            <param name="websiteDto">Data transfer object with website information</param>
            <param name="memberInfo">Member logged information</param>
            <param name="subscriptionsRepository">Contains an instance to the Subscriptions repository</param>
            <param name="plansRepository">Contains an instance to the Plans repository</param>
            <param name="websitesRepository">Instance for the website repository</param>
        </member>
        <member name="T:FeChat.Controllers.User.Websites.DeleteController">
            <summary>
            Websites Delete Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Websites.DeleteController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.DeleteController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.DeleteController.DeleteWebsite(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Delete a website
            </summary>
            <param name="websiteId">Contains the website's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">An instance to the websites repository</param>
            <returns>Message about the website status</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Websites.ReadController">
            <summary>
            Websites Read Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Websites.ReadController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.ReadController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.ReadController.List(FeChat.Models.Dtos.SearchDto,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Get the list with websites
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">An instance to the websites repository</param>
            <returns>List with websites or error messages</returns>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.ReadController.Website(System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Gets the website information
            </summary>
            <param name="websiteId">Contains the website's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">An instance to the websites repository</param>
            <returns>Website information or error message</returns>
        </member>
        <member name="T:FeChat.Controllers.User.Websites.UpdateController">
            <summary>
            Websites Update Controller
            </summary>
        </member>
        <member name="F:FeChat.Controllers.User.Websites.UpdateController._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.UpdateController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for this controller
            </summary>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.UpdateController.UpdateWebsite(FeChat.Models.Dtos.Websites.NewWebsiteDto,System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Update the website informations
            </summary>
            <param name="websiteDto">Data transfer object with website information</param>
            <param name="websiteId">Contains the website's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">Instance for the website repository</param>
        </member>
        <member name="M:FeChat.Controllers.User.Websites.UpdateController.UpdateChat(FeChat.Models.Dtos.Websites.NewWebsiteDto,System.Int32,FeChat.Utils.General.Member,FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository)">
            <summary>
            Update the website chat settings
            </summary>
            <param name="websiteDto">Data transfer object with website information</param>
            <param name="websiteId">Contains the website's ID</param>
            <param name="memberInfo">Member logged information</param>
            <param name="websitesRepository">Instance for the website repository</param>
        </member>
        <member name="T:FeChat.Models.Binders.RestrictionsDtoBinder">
            <summary>
            Model Binder for RestrictionsDto
            </summary>
        </member>
        <member name="M:FeChat.Models.Binders.RestrictionsDtoBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Handle the data from an incoming request
            </summary>
            <param name="bindingContext">Contains incomed information</param>
        </member>
        <member name="T:FeChat.Models.Dtos.ElementsDto`1">
            <summary>
            Search Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.ElementsDto`1.Elements">
            <summary>
            Elements field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.ElementsDto`1.Total">
            <summary>
            Total number field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.ElementsDto`1.Page">
            <summary>
            Page number field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Events.EventDto">
            <summary>
            Event Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.EventId">
            <summary>
            Event's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.TypeId">
            <summary>
            Type's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.Created">
            <summary>
            Created field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.FirstName">
            <summary>
            First Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.LastName">
            <summary>
            Last Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.ProfilePhoto">
            <summary>
            Profile Photo field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Events.EventDto.Email">
            <summary>
            Email field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.EventsSearchDto">
            <summary>
            Events Search Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.EventsSearchDto._year">
            <summary>
            Year container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.EventsSearchDto._month">
            <summary>
            Month container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.EventsSearchDto._date">
            <summary>
            Date container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.EventsSearchDto.MemberId">
            <summary>
            MemberId field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.EventsSearchDto.Year">
            <summary>
            Year field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.EventsSearchDto.Month">
            <summary>
            Month field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.EventsSearchDto.Date">
            <summary>
            Date field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.IpDto">
            <summary>
            IP Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.Ip">
            <summary>
            Ip field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.CountryCode">
            <summary>
            Country Code field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.CountryName">
            <summary>
            Country Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.RegionName">
            <summary>
            Region Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.CityName">
            <summary>
            City Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.Latitude">
            <summary>
            Latitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.Longitude">
            <summary>
            Longitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.ZipCode">
            <summary>
            Zip Code field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.IpDto.TimeZone">
            <summary>
            Time Zone field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.GoogleDto">
            <summary>
            Google Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.GoogleDto._code">
            <summary>
            Code container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.GoogleDto.Code">
            <summary>
            Code field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.MemberDto">
            <summary>
            Member Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.FirstName">
            <summary>
            Member's first name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.LastName">
            <summary>
            Member's last name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Email">
            <summary>
            Member's email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Phone">
            <summary>
            Member's phone field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Language">
            <summary>
            Member's language field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Role">
            <summary>
            Member's role field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Password">
            <summary>
            Member's password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.RepeatPassword">
            <summary>
            Member's repeat password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.ResetCode">
            <summary>
            Member's reset code field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.ResetTime">
            <summary>
            Reset time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.Created">
            <summary>
            Joined time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.ProfilePhoto">
            <summary>
            Profile Photo
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.PlanId">
            <summary>
            Member's plan id field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.NotificationsEnabled">
            <summary>
            Notifications Status field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.MemberDto.NotificationsEmail">
            <summary>
            Notifications Email field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.NewMemberDto">
            <summary>
            New Member Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.NewMemberDto._firstName">
            <summary>
            First name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.NewMemberDto._lastName">
            <summary>
            Last name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.NewMemberDto._email">
            <summary>
            Email container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.FirstName">
            <summary>
            Member's first name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.LastName">
            <summary>
            Member's last name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.Email">
            <summary>
            Member's email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.Role">
            <summary>
            Member's role field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.Password">
            <summary>
            Member's password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.NewMemberDto.Created">
            <summary>
            Joined time
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.OptionDto">
            <summary>
            Member Option Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionDto.OptionId">
            <summary>
            Option's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionDto.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionDto.OptionName">
            <summary>
            Option's name
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionDto.OptionValue">
            <summary>
            Option's value
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.OptionsDto">
            <summary>
            Dto for Member
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionsDto.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionsDto.SidebarStatus">
            <summary>
            Sidebar status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionsDto.MembersChartTime">
            <summary>
            Members chart time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.OptionsDto.ThreadsChartTime">
            <summary>
            Threads chart time
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Members.UpdateMemberDto">
            <summary>
            Update Member Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._firstName">
            <summary>
            First name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._lastName">
            <summary>
            Last name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._email">
            <summary>
            Email container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._phone">
            <summary>
            Phone container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._language">
            <summary>
            Language container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._resetCode">
            <summary>
            Reset code container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Members.UpdateMemberDto._notificationsEmail">
            <summary>
            Notifications Email container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.FirstName">
            <summary>
            Member's first name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.LastName">
            <summary>
            Member's last name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Email">
            <summary>
            Member's email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Phone">
            <summary>
            Member's phone field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Language">
            <summary>
            Member's language field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Role">
            <summary>
            Member's role field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Password">
            <summary>
            Member's password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.RepeatPassword">
            <summary>
            Member's repeat password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.ResetCode">
            <summary>
            Member's reset code field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.ResetTime">
            <summary>
            Reset time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.Created">
            <summary>
            Joined time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.ProfilePhoto">
            <summary>
            Profile Photo
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.PlanId">
            <summary>
            Member's plan id field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.NotificationsEnabled">
            <summary>
            Notifications Status field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Members.UpdateMemberDto.NotificationsEmail">
            <summary>
            Notifications Email field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.AttachmentDto">
            <summary>
            Attachment Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.AttachmentDto.AttachmentId">
            <summary>
            Attachment ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.AttachmentDto.MessageId">
            <summary>
            Message ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.AttachmentDto.Link">
            <summary>
            Link field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.AttachmentDto.Created">
            <summary>
            Created field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.GuestDto">
            <summary>
            Guest Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.GuestId">
            <summary>
            Guest Id field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.Name">
            <summary>
            Guest Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.Email">
            <summary>
            Guest Email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.Ip">
            <summary>
            Guest Ip field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.Latitude">
            <summary>
            Guest Latitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.GuestDto.Longitude">
            <summary>
            Guest Longitude field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.MessageDto">
            <summary>
            Message Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.MessageDto._secret">
            <summary>
            Secret container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.MessageDto._message">
            <summary>
            Message container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.MessageId">
            <summary>
            Message ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.WebsiteId">
            <summary>
            Website ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.ThreadSecret">
            <summary>
            Thread Secret field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.Message">
            <summary>
            Message field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.Seen">
            <summary>
            Seen field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.Created">
            <summary>
            Created field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessageDto.Attachments">
            <summary>
            Attachments field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.MessagesListDto">
            <summary>
            Message List Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.MessagesListDto._secret">
            <summary>
            Secret container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessagesListDto.WebsiteId">
            <summary>
            Website ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessagesListDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessagesListDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessagesListDto.ThreadSecret">
            <summary>
            Thread Secret field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.MessagesListDto.Page">
            <summary>
            Page field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.NewThreadDto">
            <summary>
            NewThread Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.NewThreadDto._name">
            <summary>
            Guest Name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.NewThreadDto._email">
            <summary>
            Guest Email container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Messages.NewThreadDto._message">
            <summary>
            Guest Message container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.NewThreadDto.WebsiteId">
            <summary>
            Website Id
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.NewThreadDto.Name">
            <summary>
            Guest Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.NewThreadDto.Email">
            <summary>
            Guest Email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.NewThreadDto.Message">
            <summary>
            Message field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.ResponseThreadDto">
            <summary>
            Response Thread Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.ThreadSecret">
            <summary>
            Thread Secret field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.WebsiteId">
            <summary>
            Website ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.Created">
            <summary>
            Created Time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestId">
            <summary>
            Guest ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestName">
            <summary>
            Guest Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestEmail">
            <summary>
            Guest Email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestIp">
            <summary>
            Guest Ip field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestLatitude">
            <summary>
            Guest Latitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.GuestLongitude">
            <summary>
            Guest Longitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.MessageId">
            <summary>
            Message Id field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.Message">
            <summary>
            Message field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.MessageSeen">
            <summary>
            Message Seen field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.MessageCreated">
            <summary>
            Message Created Time field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ResponseThreadDto.TotalMessages">
            <summary>
            Total Messages in a Thread field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.ThreadDto">
            <summary>
            Thread Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.ThreadSecret">
            <summary>
            Thread Secret field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.WebsiteId">
            <summary>
            Website ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.Created">
            <summary>
            Created Time
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestId">
            <summary>
            Guest ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestName">
            <summary>
            Guest Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestEmail">
            <summary>
            Guest Email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestIp">
            <summary>
            Guest Ip field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestLatitude">
            <summary>
            Guest Latitude field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.ThreadDto.GuestLongitude">
            <summary>
            Guest Longitude field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.TypingDto">
            <summary>
            Typing Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.TypingDto.Id">
            <summary>
            Typing ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.TypingDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.TypingDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.TypingDto.Updated">
            <summary>
            Updated Time
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Messages.UnseenMessageDto">
            <summary>
            Unseen Message Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.MessageId">
            <summary>
            Message ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.WebsiteId">
            <summary>
            Website ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.ThreadId">
            <summary>
            Thread ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.MemberId">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.ThreadSecret">
            <summary>
            Thread Secret field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.Message">
            <summary>
            Message field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.Seen">
            <summary>
            Seen field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.Created">
            <summary>
            Created field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.Attachments">
            <summary>
            Attachments field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.ThreadOwner">
            <summary>
            Member's id field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.FirstName">
            <summary>
            Member's first name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.LastName">
            <summary>
            Member's last name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Messages.UnseenMessageDto.Email">
            <summary>
            Member's email field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Plans.FeatureDto">
            <summary>
            Dto for Plans Feature
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Plans.FeatureDto._featureText">
            <summary>
            Plan feature text container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.FeatureDto.FeatureId">
            <summary>
            Feature's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.FeatureDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.FeatureDto.FeatureText">
            <summary>
            Feature's name
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Plans.PlanDto">
            <summary>
            Dto for Plan
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Plans.PlanDto._name">
            <summary>
            Plan name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Plans.PlanDto._price">
            <summary>
            Plan price container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Plans.PlanDto._currency">
            <summary>
            Plan currency container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.PlanId">
            <summary>
            Plan's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.Name">
            <summary>
            Plan name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.Price">
            <summary>
            Plan price field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.Currency">
            <summary>
            Plan currency field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.Created">
            <summary>
            Plan created field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanDto.Features">
            <summary>
            Plan Features field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Plans.PlanMetaDto">
            <summary>
            Plan Meta Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanMetaDto.MetaId">
            <summary>
            Meta's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanMetaDto.PlanId">
            <summary>
            Plan's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanMetaDto.MetaName">
            <summary>
            Meta's Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.PlanMetaDto.MetaValue">
            <summary>
            Meta's Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Plans.RestrictionDto">
            <summary>
            Dto for Plans Restriction
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionDto.RestrictionId">
            <summary>
            Restriction's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionDto.RestrictionName">
            <summary>
            Restriction's name
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionDto.RestrictionValue">
            <summary>
            Restriction's value
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Plans.RestrictionsDto">
            <summary>
            Dto for Plans Restrictions
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionsDto.PlanId">
            <summary>
            Plan's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Plans.RestrictionsDto.Websites">
            <summary>
            Allowed websites
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.ResponseDto`1">
            <summary>
            A generic type for responses
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.ResponseDto`1.Result">
            <summary>
            Set response
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.ResponseDto`1.Message">
            <summary>
            Message for the response
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.RestResponseDto">
            <summary>
            Rest Response Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.RestResponseDto.Success">
            <summary>
            Response Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.RestResponseDto.Data">
            <summary>
            Success response content
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.RestResponseDto.Message">
            <summary>
            Message for the response
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.SearchDto">
            <summary>
            Search Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.SearchDto._search">
            <summary>
            Search keys container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.SearchDto.Search">
            <summary>
            Search field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.SearchDto.Page">
            <summary>
            Page number field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Settings.OptionDto">
            <summary>
            Settings Option Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionDto.OptionId">
            <summary>
            Option's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionDto.OptionName">
            <summary>
            Option's Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionDto.OptionValue">
            <summary>
            Option's Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Settings.OptionsDto">
            <summary>
            Options Data Transfer
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._websiteName">
            <summary>
            Website Name Value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._homePageLogo">
            <summary>
            Home Page Logo value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._signInPageLogo">
            <summary>
            Sign In Page Logo value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._dashboardLogoSmall">
            <summary>
            Dashboard Logo Small value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._dashboardLogoLarge">
            <summary>
            Dashboard Logo Large value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._privacyPolicy">
            <summary>
            Privacy Policy value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._cookies">
            <summary>
            Cookies value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._termsOfService">
            <summary>
            Terms of Service value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._demoVideo">
            <summary>
            Demo Video value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._payPalClientId">
            <summary>
            PayPal client id value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._payPalClientSecret">
            <summary>
            PayPal client secret value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._ip2LocationKey">
            <summary>
            Api 2 Location Key value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._googleMapsKey">
            <summary>
            Google Maps Key value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._googleClientId">
            <summary>
            Google Secret Id value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._googleClientSecret">
            <summary>
            Google Secret Key value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._reCAPTCHAKey">
            <summary>
            Google ReCaptcha Key value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._emailSender">
            <summary>
            Email sender value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._smtpProtocol">
            <summary>
            Smtp protocol value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._smtpHost">
            <summary>
            Smtp host value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._smtpPort">
            <summary>
            Smtp port value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._smtpUsername">
            <summary>
            Smtp username value
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Settings.OptionsDto._smtpPassword">
            <summary>
            Smtp password value
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.WebsiteName">
            <summary>
            Website Name Holder
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.HomePageLogo">
            <summary>
            Logo for home page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SignInPageLogo">
            <summary>
            Logo for sign in page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.DashboardLogoSmall">
            <summary>
            Logo for dashboard page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.DashboardLogoLarge">
            <summary>
            Logo for dashboard page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.AnalyticsCode">
            <summary>
            Website Analytics Code
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.PrivacyPolicy">
            <summary>
            Privacy Policy page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.Cookies">
            <summary>
            Cookies page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.TermsOfService">
            <summary>
            Terms Of Service page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.DemoVideo">
            <summary>
            Demo Video page
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.RegistrationEnabled">
            <summary>
            Registration Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.RegistrationConfirmationEnabled">
            <summary>
            Registration Confirmation Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.PayPalEnabled">
            <summary>
            PayPal Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.PayPalClientId">
            <summary>
            PayPal Client ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.PayPalClientSecret">
            <summary>
            PayPal Client Secret
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.PayPalSandboxEnabled">
            <summary>
            PayPal Sandbox Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.Ip2LocationEnabled">
            <summary>
            Ip 2 Location Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.Ip2LocationKey">
            <summary>
            Ip 2 Location Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.GoogleMapsEnabled">
            <summary>
            Google Maps Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.GoogleMapsKey">
            <summary>
            Google Maps Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.GoogleAuthEnabled">
            <summary>
            Google Auth Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.GoogleClientId">
            <summary>
            Google Client ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.GoogleClientSecret">
            <summary>
            Google Client Secret
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.ReCAPTCHAEnabled">
            <summary>
            Google ReCaptcha Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.ReCAPTCHAKey">
            <summary>
            Google ReCaptcha Id Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpEnabled">
            <summary>
            SMTP Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.EmailSender">
            <summary>
            Email Sender
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpProtocol">
            <summary>
            SMTP Protocol
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpHost">
            <summary>
            SMTP Host
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpPort">
            <summary>
            SMTP Port
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpUsername">
            <summary>
            SMTP Username
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpPassword">
            <summary>
            SMTP Password
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Settings.OptionsDto.SmtpSending">
            <summary>
            SMTP Sending
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.StorageDto">
            <summary>
            A generic type for responses
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.StorageDto.FileUrl">
            <summary>
            File's URL
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto">
            <summary>
            New Subscription Dto
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto._source">
            <summary>
            Payment Source Container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto._orderId">
            <summary>
            Order ID Container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto._subscriptionId">
            <summary>
            Subscription ID Container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto.Source">
            <summary>
            Payment Source Field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto.OrderId">
            <summary>
            Order ID Field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.NewSubscriptionDto.SubscriptionId">
            <summary>
            Subscription ID Field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Subscriptions.SubscriptionDto">
            <summary>
            New Subscription Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.OrderId">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.NetId">
            <summary>
            Subscription ID returned from gateway
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.Source">
            <summary>
            Gateway Source
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.Expiration">
            <summary>
            Time When Expires the subscription
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Subscriptions.SubscriptionDto.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Transactions.TransactionDetailsDto">
            <summary>
            New Transaction Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.OrderId">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.NetId">
            <summary>
            Transaction ID returned from gateway
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.Source">
            <summary>
            Gateway Source
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.PlanName">
            <summary>
            Plan Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.PlanPrice">
            <summary>
            Plan Price field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.PlanCurrency">
            <summary>
            Plan Currency field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.ProfilePhoto">
            <summary>
            Profile Photo field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.FirstName">
            <summary>
            First Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDetailsDto.LastName">
            <summary>
            Last Name field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Transactions.TransactionDto">
            <summary>
            New Transaction Dto
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.OrderId">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.NetId">
            <summary>
            Transaction ID returned from gateway
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.Source">
            <summary>
            Gateway Source
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Transactions.TransactionDto.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Websites.NewWebsiteDto">
            <summary>
            Dto for New Websites
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Websites.NewWebsiteDto._header">
            <summary>
            Chat header container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Websites.NewWebsiteDto._name">
            <summary>
            Website name container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Websites.NewWebsiteDto._url">
            <summary>
            Website url container
            </summary>
        </member>
        <member name="F:FeChat.Models.Dtos.Websites.NewWebsiteDto._domain">
            <summary>
            Website domain container
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.WebsiteId">
            <summary>
            Website's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Enabled">
            <summary>
            Chat status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Header">
            <summary>
            Chat header field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Name">
            <summary>
            Website name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Url">
            <summary>
            Website url field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Domain">
            <summary>
            Website domain field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.NewWebsiteDto.Created">
            <summary>
            Website created field
            </summary>
        </member>
        <member name="T:FeChat.Models.Dtos.Websites.WebsiteDto">
            <summary>
            Dto for Websites
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.WebsiteId">
            <summary>
            Website's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Enabled">
            <summary>
            Chat status
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Header">
            <summary>
            Chat header field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Name">
            <summary>
            Website name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Url">
            <summary>
            Website url field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Domain">
            <summary>
            Website domain field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.Created">
            <summary>
            Website created field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.MemberID">
            <summary>
            Member ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.FirstName">
            <summary>
            Member First Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.LastName">
            <summary>
            Member Last Name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Dtos.Websites.WebsiteDto.ProfilePhoto">
            <summary>
            Member Profile Photo field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Events.EventEntity">
            <summary>
            Event Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Events.EventEntity.EventId">
            <summary>
            Event Id Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Events.EventEntity.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Events.EventEntity.TypeId">
            <summary>
            Type ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Events.EventEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Members.MemberEntity">
            <summary>
            Member entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.FirstName">
            <summary>
            Member's first name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.LastName">
            <summary>
            Member's last name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.Email">
            <summary>
            Member's email field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.Role">
            <summary>
            Member's role field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.Password">
            <summary>
            Member's password field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.ResetCode">
            <summary>
            Member's reset code field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.ResetTime">
            <summary>
            Member's reset time field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberEntity.Created">
            <summary>
            Member's joined time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Members.MemberOptionsEntity">
            <summary>
            Member Options entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberOptionsEntity.OptionId">
            <summary>
            Option's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberOptionsEntity.MemberId">
            <summary>
            Member's ID field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberOptionsEntity.OptionName">
            <summary>
            Member's option name field
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Members.MemberOptionsEntity.OptionValue">
            <summary>
            Option's Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Messages.AttachmentEntity">
            <summary>
            Attachment Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.AttachmentEntity.AttachmentId">
            <summary>
            Attachment's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.AttachmentEntity.MessageId">
            <summary>
            Message ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.AttachmentEntity.Link">
            <summary>
            Attachment link
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.AttachmentEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Messages.GuestEntity">
            <summary>
            Guest Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.GuestId">
            <summary>
            Guest's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Name">
            <summary>
            Guest Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Email">
            <summary>
            Guest Email
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Ip">
            <summary>
            Ip address
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Latitude">
            <summary>
            Guest Latitude
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Longitude">
            <summary>
            Guest Longitude
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.GuestEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Messages.MessageEntity">
            <summary>
            Message Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.MessageId">
            <summary>
            Message's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.ThreadId">
            <summary>
            Thread ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.MemberId">
            <summary>
            Member Id
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.Message">
            <summary>
            Message Body
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.Seen">
            <summary>
            Seen status
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.MessageEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Messages.ThreadEntity">
            <summary>
            Thread Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.ThreadId">
            <summary>
            Thread's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.ThreadSecret">
            <summary>
            Thread Secret
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.MemberId">
            <summary>
            Member Id
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.WebsiteId">
            <summary>
            Website Id
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.GuestId">
            <summary>
            Guest ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.ThreadEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Messages.TypingEntity">
            <summary>
            Typing Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.TypingEntity.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.TypingEntity.ThreadId">
            <summary>
            Thread ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.TypingEntity.MemberId">
            <summary>
            Member Id
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Messages.TypingEntity.Updated">
            <summary>
            Updated time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Plans.PlanEntity">
            <summary>
            Plan Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlanEntity.PlanId">
            <summary>
            Plan's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlanEntity.Name">
            <summary>
            Plan Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlanEntity.Price">
            <summary>
            Plan Price
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlanEntity.Currency">
            <summary>
            Plan Currency
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlanEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Plans.PlansFeaturesEntity">
            <summary>
            Plans Features Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansFeaturesEntity.FeatureId">
            <summary>
            Feature ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansFeaturesEntity.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansFeaturesEntity.FeatureText">
            <summary>
            Feature Text
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Plans.PlansMetaEntity">
            <summary>
            Plans Meta Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansMetaEntity.MetaId">
            <summary>
            Meta ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansMetaEntity.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansMetaEntity.MetaName">
            <summary>
            Meta Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansMetaEntity.MetaValue">
            <summary>
            Meta Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Plans.PlansRestrictionsEntity">
            <summary>
            Plans Restrictions Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansRestrictionsEntity.RestrictionId">
            <summary>
            Restriction ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansRestrictionsEntity.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansRestrictionsEntity.RestrictionName">
            <summary>
            Restriction Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Plans.PlansRestrictionsEntity.RestrictionValue">
            <summary>
            Restriction Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Settings.SettingsEntity">
            <summary>
            Settings Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Settings.SettingsEntity.OptionId">
            <summary>
            Option Id Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Settings.SettingsEntity.OptionName">
            <summary>
            Option Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Settings.SettingsEntity.OptionValue">
            <summary>
            Option Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Subscriptions.SubscriptionEntity">
            <summary>
            Subscription Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.OrderId">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.NetId">
            <summary>
            Subscription ID returned from gateway
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.Source">
            <summary>
            Gateway Source
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.Expiration">
            <summary>
            Time When Expires the subscription
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Subscriptions.SubscriptionsMetaEntity">
            <summary>
            Subscription Meta Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionsMetaEntity.MetaId">
            <summary>
            Meta ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionsMetaEntity.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionsMetaEntity.MetaName">
            <summary>
            Meta Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Subscriptions.SubscriptionsMetaEntity.MetaValue">
            <summary>
            Meta Value
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Transactions.TransactionEntity">
            <summary>
            Transaction Entity
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.MemberId">
            <summary>
            Member ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.SubscriptionId">
            <summary>
            Subscription ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.PlanId">
            <summary>
            Plan ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.OrderId">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.NetId">
            <summary>
            Transaction ID returned from gateway
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.Source">
            <summary>
            Gateway Source
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Transactions.TransactionEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Entities.Websites.WebsiteEntity">
            <summary>
            Entity for Websites
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.WebsiteId">
            <summary>
            Website ID AutoIncrement Key
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Enabled">
            <summary>
            Enabled Status
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Header">
            <summary>
            Chat Header
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Name">
            <summary>
            Website Name
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Url">
            <summary>
            Website Url
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Domain">
            <summary>
            Website Domain
            </summary>
        </member>
        <member name="P:FeChat.Models.Entities.Websites.WebsiteEntity.Created">
            <summary>
            Created time field
            </summary>
        </member>
        <member name="T:FeChat.Models.Repositories.Events.EventsRepository">
            <summary>
            Events Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Events.EventsRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Events.EventsRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Events.EventsRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Events.EventsRepository.CreateEventAsync(System.Int32,System.Int32)">
            <summary>
            Create an event
            </summary>
            <param name="memberId">Member ID</param>
            <param name="typeId">Type ID</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Events.EventsRepository.GetEventsAsync(System.Int32,System.Int32)">
            <summary>
            Gets events from the database
            </summary>
            <param name="memberId">Member Id</param>
            <param name="time">Time for events reading</param>
            <returns>List with events or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Events.EventsRepository.DeleteMemberEventsAsync(System.Int32)">
            <summary>
            Delete member events
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Account.AuthRepository">
            <summary>
            Members Auth Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.AuthRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.AuthRepository.#ctor(FeChat.Utils.Configuration.Db)">
            <summary>
            Members Auth Repository constructor
            </summary>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.AuthRepository.SignIn(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Check if the member and password is correct
            </summary>
            <param name="memberDto">Member dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Account.CreateRepository">
            <summary>
            Members Create Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.CreateRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Create Repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.CreateRepository.CreateMemberAsync(FeChat.Models.Dtos.Members.NewMemberDto)">
            <summary>
            Create a member
            </summary>
            <param name="newMemberDto">Member dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Account.DeleteRepository">
            <summary>
            Members Delete Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.DeleteRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Delete Repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.DeleteRepository.DeleteMemberAsync(System.Int32)">
            <summary>
            Delete member
            </summary>
            <param name="memberId">Member ID</param>
            <returns>Bool true if the member was deleted</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Account.ReadRepository">
            <summary>
            Members Read Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.ReadRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Read Repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMembersAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets all members
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMembersByTimeAsync(System.Int32)">
            <summary>
            Gets all members by time
            </summary>
            <param name="time">Time filter</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMembersForExportAsync">
            <summary>
            Gets all members for export
            </summary>
            <returns>List with all members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMemberAsync(System.Int32)">
            <summary>
            Get member data
            </summary>
            <param name="memberId">Member ID</param>
            <returns>MemberDto with member's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMemberEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Get member email
            </summary>
            <param name="memberDto">Member data</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.ReadRepository.GetMemberByCodeAsync(System.String)">
            <summary>
            Get member by reset code
            </summary>
            <param name="code">Reset code</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Account.UpdateRepository">
            <summary>
            Members Update Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Account.UpdateRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Update Repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.UpdateRepository.UpdateMemberAsync(FeChat.Models.Entities.Members.MemberEntity)">
            <summary>
            Update a member
            </summary>
            <param name="memberDto">Member entity with the member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.UpdateRepository.UpdateEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member email
            </summary>
            <param name="memberDto">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Account.UpdateRepository.UpdatePasswordAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member password
            </summary>
            <param name="memberDto">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.MembersRepository">
            <summary>
            Members Repository pattern
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.MembersRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.MembersRepository._context">
            <summary>
            Members table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.CreateMemberAsync(FeChat.Models.Dtos.Members.NewMemberDto)">
            <summary>
            Create a member
            </summary>
            <param name="newMemberDto">Member dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.UpdateMemberAsync(FeChat.Models.Entities.Members.MemberEntity)">
            <summary>
            Update a member
            </summary>
            <param name="memberDto">Member entity with the member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.UpdateEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member email
            </summary>
            <param name="memberDto">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.UpdatePasswordAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member password
            </summary>
            <param name="memberDto">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.SignIn(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Check if the member and password is correct
            </summary>
            <param name="memberDto">Member dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMembersAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets all members
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMembersByTimeAsync(System.Int32)">
            <summary>
            Gets all members by time
            </summary>
            <param name="time">Time filter</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMembersForExportAsync">
            <summary>
            Gets all members for export
            </summary>
            <returns>List with all members</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMemberAsync(System.Int32)">
            <summary>
            Get member data
            </summary>
            <param name="memberId">Member ID</param>
            <returns>MemberDto with member's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMemberEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Get member email
            </summary>
            <param name="memberDto">Member data</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMemberByCodeAsync(System.String)">
            <summary>
            Get member by reset code
            </summary>
            <param name="code">Reset code</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.DeleteMemberAsync(System.Int32)">
            <summary>
            Delete member
            </summary>
            <param name="memberId">Member ID</param>
            <returns>Bool true if the member was deleted</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.SaveOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Save bulk options for Members
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.UpdateOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Update bulk options
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.OptionsListAsync(System.Int32)">
            <summary>
            Get the options list
            </summary>
            <param name="MemberId">Member's ID</param>
            <returns>Get the options list</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.MembersRepository.GetMemberOptionWithGoogle(System.String)">
            <summary>
            Get Member Option with Google ID
            </summary>
            <param name="googleId">Google ID</param>
            <returns>Option of the user or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Options.CreateRepository">
            <summary>
            Members Options Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.CreateRepository._context">
            <summary>
            Db connection container
            </summary>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Options Create constructor
            </summary>
            <param name="memoryCache">Memory cache instane</param>
            <param name="db">Db connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.CreateRepository.SaveOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Save bulk options
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Options.ReadRepository">
            <summary>
            Members Options Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.ReadRepository._context">
            <summary>
            Db connection container
            </summary>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Options Read constructor
            </summary>
            <param name="memoryCache">Memory cache instane</param>
            <param name="db">Db connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.ReadRepository.OptionsListAsync(System.Int32)">
            <summary>
            Get the options list
            </summary>
            <param name="MemberId">Member's ID</param>
            <returns>Get the options list</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.ReadRepository.GetMemberOptionWithGoogle(System.String)">
            <summary>
            Get Member Option with Google ID
            </summary>
            <param name="googleId">Google ID</param>
            <returns>Option of the user or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Members.Options.UpdateRepository">
            <summary>
            Members Options Update Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Members.Options.UpdateRepository._context">
            <summary>
            Db connection container
            </summary>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Members Options Update constructor
            </summary>
            <param name="memoryCache">Memory cache instane</param>
            <param name="db">Db connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Members.Options.UpdateRepository.UpdateOptions(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Update bulk options
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Attachments.CreateRepository">
            <summary>
            Attachments Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Attachments.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Attachments.CreateRepository.#ctor(FeChat.Utils.Configuration.Db)">
            <summary>
            Attachments Create Repository Constructor
            </summary>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Attachments.CreateRepository.CreateAttachmentAsync(FeChat.Models.Dtos.Messages.AttachmentDto)">
            <summary>
            Create attachment
            </summary>
            <param name="attachmentDto">Attachment data</param>
            <returns>Saved attachment data or message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Guests.CreateRepository">
            <summary>
            Guests Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Guests.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Guests.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Guests.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Guests Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Guests.CreateRepository.CreateGuestAsync(FeChat.Models.Dtos.Messages.GuestDto)">
            <summary>
            Create Guests
            </summary>
            <param name="guestDto">Guest information</param>
            <returns>Response with guest id or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.MessagesRepository">
            <summary>
            Messages Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.MessagesRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.MessagesRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.CreateMessageAsync(FeChat.Models.Dtos.Messages.MessageDto)">
            <summary>
            Create a message
            </summary>
            <param name="messageDto">Contains message data</param>
            <returns>Response with message id and message text</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.MessagesListAsync(FeChat.Models.Dtos.Messages.MessagesListDto)">
            <summary>
            Get the messages list
            </summary>
            <param name="messagesListDto">Parameters for messages list</param>
            <returns>List with messages or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.MessagesUnseenAsync(System.Int32,System.Int32)">
            <summary>
            Get unseen messages by thread
            </summary>
            <param name="threadId">Thread ID where will be looked for unseen messages</param>
            <param name="memberId">Member ID which has unseen messages</param>
            <returns>Bool and error message if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.AllMessagesUnseenAsync">
            <summary>
            Get unseen messages by thread
            </summary>
            <returns>Unseen messages or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.DeleteMessageAsync(System.Int32)">
            <summary>
            Delete message
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Bool true if the message was deleted</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.CreateGuestAsync(FeChat.Models.Dtos.Messages.GuestDto)">
            <summary>
            Create Guests
            </summary>
            <param name="guestDto">Guest information</param>
            <returns>Response with guest id or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.CreateThreadAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Create Threads
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread secret and id or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetThreadsAsync(FeChat.Models.Dtos.SearchDto,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets all threads
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="memberId">Member Id</param>
            <param name="websiteId">Website ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetHotThreadsAsync(System.Int32)">
            <summary>
            Gets last 5 updated threads
            </summary>
            <param name="memberId">Member ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetThreadsByTimeAsync(System.Int32,System.Int32)">
            <summary>
            Gets all threads by time
            </summary>
            <param name="memberId">Member ID</param>
            <param name="time">Time filter</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetThreadByWebsiteIdAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Get thread by website's id and thread secret
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetThreadAsync(System.Int32,System.Int32)">
            <summary>
            Get thread data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>ThreadDto with thread's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.DeleteThreadAsync(System.Int32,System.Int32)">
            <summary>
            Delete thread
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>Bool true if the thread was deleted</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.SaveTypingAsync(System.Int32,System.Int32)">
            <summary>
            Save typing
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.UpdateTypingAsync(System.Int32)">
            <summary>
            Update Typing ID
            </summary>
            <param name="typingId">Typing Id</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.GetTypingAsync(System.Int32,System.Int32)">
            <summary>
            Get typing data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>typing data or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.MessagesRepository.CreateAttachment(FeChat.Models.Dtos.Messages.AttachmentDto)">
            <summary>
            Create attachment
            </summary>
            <param name="attachmentDto">Attachment data</param>
            <returns>Saved attachment data or message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Messages.CreateRepository">
            <summary>
            Messages Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Messages Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.CreateRepository.CreateMessageAsync(FeChat.Models.Dtos.Messages.MessageDto)">
            <summary>
            Create a message
            </summary>
            <param name="messageDto">Contains message data</param>
            <returns>Response with message id and message text</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Messages.DeleteRepository">
            <summary>
            Messages Delete Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.DeleteRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Messages Delete Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.DeleteRepository.DeleteMessageAsync(System.Int32)">
            <summary>
            Delete message
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Bool true if the message was deleted</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Messages.ReadRepository">
            <summary>
            Messages Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Messages.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Messages Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.ReadRepository.MessagesListAsync(FeChat.Models.Dtos.Messages.MessagesListDto)">
            <summary>
            Get the messages list
            </summary>
            <param name="messagesListDto">Parameters for messages list</param>
            <returns>List with messages or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.ReadRepository.MessagesUnseenAsync(System.Int32,System.Int32)">
            <summary>
            Get unseen messages by thread
            </summary>
            <param name="threadId">Thread ID where will be looked for unseen messages</param>
            <param name="memberId">Member ID which has unseen messages</param>
            <returns>Bool and error message if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Messages.ReadRepository.AllMessagesUnseenAsync">
            <summary>
            Get unseen messages by thread
            </summary>
            <returns>Unseen messages or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Threads.CreateRepository">
            <summary>
            Threads Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Threads Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.CreateRepository.CreateThreadAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Create Threads
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread secret and id or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Threads.DeleteRepository">
            <summary>
            Threads Delete Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.DeleteRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Threads Delete Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.DeleteRepository.DeleteThreadAsync(System.Int32,System.Int32)">
            <summary>
            Delete thread
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>Bool true if the thread was deleted</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Threads.ReadRepository">
            <summary>
            Threads Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Threads.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Threads Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.GetThreadsAsync(FeChat.Models.Dtos.SearchDto,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets all threads
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="memberId">Member Id</param>
            <param name="websiteId">Website ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.GetHotThreadsAsync(System.Int32)">
            <summary>
            Gets last 5 updated threads
            </summary>
            <param name="memberId">Member ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.GetThreadsByTimeAsync(System.Int32,System.Int32)">
            <summary>
            Gets all threads by time
            </summary>
            <param name="memberId">Member ID</param>
            <param name="time">Time filter</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.GetThreadByWebsiteIdAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Get thread by website's id and thread secret
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Threads.ReadRepository.GetThreadAsync(System.Int32,System.Int32)">
            <summary>
            Get thread data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>ThreadDto with thread's data</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Typing.CreateRepository">
            <summary>
            Typing Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Typing.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Typing.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Typing Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.CreateRepository.SaveTypingAsync(System.Int32,System.Int32)">
            <summary>
            Save typing
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>Id or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Typing.ReadRepository">
            <summary>
            Typing Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Typing.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.ReadRepository.#ctor(FeChat.Utils.Configuration.Db)">
            <summary>
            Typing Read Repository Constructor
            </summary>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.ReadRepository.GetTypingAsync(System.Int32,System.Int32)">
            <summary>
            Get typing data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>typing data or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Messages.Typing.UpdateRepository">
            <summary>
            Typing Update Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Messages.Typing.UpdateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.UpdateRepository.#ctor(FeChat.Utils.Configuration.Db)">
            <summary>
            Typing Update Repository Constructor
            </summary>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Messages.Typing.UpdateRepository.UpdateTypingAsync(System.Int32)">
            <summary>
            Update Typing ID
            </summary>
            <param name="typingId">Typing Id</param>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Features.CreateRepository">
            <summary>
            Plans Features Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Features Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.CreateRepository.SaveFeaturesAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansFeaturesEntity})">
            <summary>
            Save bulk features
            </summary>
            <param name="features">Plan features list</param>
            <returns>Boolean response or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Features.DeleteRepository">
            <summary>
            Plans Features Delete Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.DeleteRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Features Delete Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.DeleteRepository.FeaturesDeleteAsync(System.Int32)">
            <summary>
            Delete the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Features.ReadRepository">
            <summary>
            Plans Features Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Features.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Features Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Features.ReadRepository.FeaturesListAsync(System.Int32)">
            <summary>
            Get the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>The features list or null</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Meta.CreateRepository">
            <summary>
            Plans Meta Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Meta Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.CreateRepository.SavePlanMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Save bulk plans meta
            </summary>
            <param name="metaEntities">Meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Meta.ReadRepository">
            <summary>
            Plans Meta Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Meta Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.ReadRepository.MetaListAsync(System.Int32)">
            <summary>
            Get the plans meta
            </summary>
            <param name="planId">Plan Id</param>
            <returns>The meta list or null</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Meta.UpdateRepository">
            <summary>
            Plans Meta Update Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Meta.UpdateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Meta Update Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Meta.UpdateRepository.UpdateMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Update bulk meta
            </summary>
            <param name="meta">Plans meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.PlansRepository">
            <summary>
            Plans Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.PlansRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.PlansRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Entity Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.CreatePlanAsync(FeChat.Models.Dtos.Plans.PlanDto)">
            <summary>
            Create a plan
            </summary>
            <param name="planDto">Contains the plan's data</param>
            <returns>Plan ID</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.SavePlanMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Save bulk plans meta
            </summary>
            <param name="metaEntities">Meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.UpdatePlanAsync(FeChat.Models.Entities.Plans.PlanEntity)">
            <summary>
            Update a plan
            </summary>
            <param name="planEntity">Plan entity with the plan's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.UpdateMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Update bulk meta
            </summary>
            <param name="meta">Plans meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.GetAllPlansAsync">
            <summary>
            Gets all plans
            </summary>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.GetPlansByPageAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets plans by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.GetPlanAsync(System.Int32)">
            <summary>
            Get plan data
            </summary>
            <param name="planId">Plan ID</param>
            <returns>PlanDto with plan's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.MetaListAsync(System.Int32)">
            <summary>
            Get the plans meta
            </summary>
            <param name="planId">Plan Id</param>
            <returns>The meta list or null</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.DeletePlanAsync(System.Int32)">
            <summary>
            Delete plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool true if the plan was deleted</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.SaveRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Save bulk restrictions
            </summary>
            <param name="restrictions">Plans restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.UpdateRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Update bulk restrictions
            </summary>
            <param name="restrictions">Settings restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.RestrictionsListAsync(System.Int32)">
            <summary>
            Get the plan restrictions
            </summary>
            <param name="planId">Plan ID</param>
            <returns>The restrictions list or null</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.SaveFeaturesAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansFeaturesEntity})">
            <summary>
            Save bulk features
            </summary>
            <param name="features">Plan features list</param>
            <returns>Boolean response or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.FeaturesListAsync(System.Int32)">
            <summary>
            Get the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>The features list or null</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.PlansRepository.FeaturesDeleteAsync(System.Int32)">
            <summary>
            Delete the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Plans.CreateRepository">
            <summary>
            Plans Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.CreateRepository.CreatePlanAsync(FeChat.Models.Dtos.Plans.PlanDto)">
            <summary>
            Create a plan
            </summary>
            <param name="planDto">Contains the plan's data</param>
            <returns>Plan ID</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Plans.DeleteRepository">
            <summary>
            Plans Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.DeleteRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Delete Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.DeleteRepository.DeletePlanAsync(System.Int32)">
            <summary>
            Delete plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool true if the plan was deleted</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Plans.ReadRepository">
            <summary>
            Plans Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.ReadRepository.GetAllPlansAsync">
            <summary>
            Gets all plans
            </summary>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.ReadRepository.GetPlansByPageAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets plans by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.ReadRepository.GetPlanAsync(System.Int32)">
            <summary>
            Get plan data
            </summary>
            <param name="planId">Plan ID</param>
            <returns>PlanDto with plan's data</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Plans.UpdateRepository">
            <summary>
            Plans Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Plans.UpdateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Update Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Plans.UpdateRepository.UpdatePlanAsync(FeChat.Models.Entities.Plans.PlanEntity)">
            <summary>
            Update a plan
            </summary>
            <param name="planEntity">Plan entity with the plan's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Restrictions.CreateRepository">
            <summary>
            Plans Restrictions Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.CreateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Restrictions Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.CreateRepository.SaveRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Save bulk restrictions
            </summary>
            <param name="restrictions">Plans restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Restrictions.ReadRepository">
            <summary>
            Plans Restrictions Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.ReadRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Restrictions Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.ReadRepository.RestrictionsListAsync(System.Int32)">
            <summary>
            Get the plan restrictions
            </summary>
            <param name="planId">Plan ID</param>
            <returns>The restrictions list or null</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Plans.Restrictions.UpdateRepository">
            <summary>
            Plans Restrictions Update Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Plans.Restrictions.UpdateRepository._context">
            <summary>
            Plans table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Plans Restrictions Update Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Plans.Restrictions.UpdateRepository.UpdateRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Update bulk restrictions
            </summary>
            <param name="restrictions">Settings restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Settings.SettingsRepository">
            <summary>
            Repository for general settings
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Settings.SettingsRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Settings.SettingsRepository._context">
            <summary>
            Settings table context container
            </summary>
        </member>
        <member name="M:FeChat.Models.Repositories.Settings.SettingsRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Settings Repository Constructor
            </summary>
            <param name="memoryCache">Memory cache session</param>
            <param name="db">Database connection</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Settings.SettingsRepository.SaveOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Settings.SettingsEntity})">
            <summary>
            Save bulk options
            </summary>
            <param name="options">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Settings.SettingsRepository.UpdateOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Settings.SettingsEntity})">
            <summary>
            Update bulk options
            </summary>
            <param name="options">Settings options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Settings.SettingsRepository.OptionsListAsync">
            <summary>
            Get the settings options
            </summary>
            <returns>The options list or null</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository">
            <summary>
            Subscriptions Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository._context">
            <summary>
            Transactions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Entity Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.CreateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Create a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Subscription id or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.CreateTransactionAsync(FeChat.Models.Dtos.Transactions.TransactionDto)">
            <summary>
            Create a transaction
            </summary>
            <param name="transactionDto">Transaction information</param>
            <returns>Transaction id or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.UpdateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Update a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Bool and error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.GetSubscriptionByMemberIdAsync(System.Int32)">
            <summary>
            Get a subscription for a user
            </summary>
            <param name="memberId">Member ID</param>
            <returns>SubscriptionDto with subscription's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.GetSubscriptionsByPlanIdAsync(System.Int32)">
            <summary>
            Get subscriptions by plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>List with subscriptions or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.GetSubscriptionByNetIdAsync(System.String)">
            <summary>
            Get subscriptions by net id
            </summary>
            <param name="netId">Net ID</param>
            <returns>Subscription data or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.DeleteMemberSubscriptionsAsync(System.Int32)">
            <summary>
            Delete member's subscriptions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.GetTransactionsByPageAsync(FeChat.Models.Dtos.SearchDto,System.Nullable{System.Int32})">
            <summary>
            Gets transactions by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="planId">Plan Id</param>
            <returns>List with transactions</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.GetTransactionAsync(System.Int32)">
            <summary>
            Gets transactions by id
            </summary>
            <param name="transactionId">Transaction ID</param>
            <returns>Transaction details or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.SubscriptionsRepository.DeleteMemberTransactionsAsync(System.Int32)">
            <summary>
            Delete the Member transactions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Subscriptions.CreateRepository">
            <summary>
            Subscriptions Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.CreateRepository._context">
            <summary>
            Subscriptions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Subscriptions Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.CreateRepository.CreateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Create a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Subscription id or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Subscriptions.DeleteRepository">
            <summary>
            Subscriptions Delete Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.DeleteRepository._context">
            <summary>
            Subscriptions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.DeleteRepository.#ctor(FeChat.Utils.Configuration.Db)">
            <summary>
            Subscriptions Delete Repository Constructor
            </summary>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.DeleteRepository.DeleteMemberSubscriptionsAsync(System.Int32)">
            <summary>
            Delete member subscriptions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository">
            <summary>
            Subscriptions Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository._context">
            <summary>
            Subscriptions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Subscriptions Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository.GetSubscriptionByMemberIdAsync(System.Int32)">
            <summary>
            Get a subscription for a user
            </summary>
            <param name="memberId">Member ID</param>
            <returns>SubscriptionDto with subscription's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository.GetSubscriptionsByPlanIdAsync(System.Int32)">
            <summary>
            Get subscriptions by plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>List with subscriptions or error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.ReadRepository.GetSubscriptionByNetIdAsync(System.String)">
            <summary>
            Get subscription by net id
            </summary>
            <param name="netId">Net ID</param>
            <returns>List with subscriptions or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Subscriptions.UpdateRepository">
            <summary>
            Subscriptions Update Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.UpdateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Subscriptions.UpdateRepository._context">
            <summary>
            Subscriptions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.UpdateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Subscriptions Update Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Subscriptions.UpdateRepository.UpdateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Update a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Bool and error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Transactions.CreateRepository">
            <summary>
            Transactions Create Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.CreateRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.CreateRepository._context">
            <summary>
            Transactions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.CreateRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Transactions Create Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.CreateRepository.CreateTransactionAsync(FeChat.Models.Dtos.Transactions.TransactionDto)">
            <summary>
            Create a transaction
            </summary>
            <param name="transactionDto">Transaction information</param>
            <returns>Transaction id or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Transactions.DeleteRepository">
            <summary>
            Transactions Delete Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.DeleteRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.DeleteRepository._context">
            <summary>
            Transactions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.DeleteRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Transactions Delete Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.DeleteRepository.DeleteMemberTransactionsAsync(System.Int32)">
            <summary>
            Delete the Member transactions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository">
            <summary>
            Transactions Read Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository._context">
            <summary>
            Transactions table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Transactions Read Repository Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository.GetTransactionsByPageAsync(FeChat.Models.Dtos.SearchDto,System.Nullable{System.Int32})">
            <summary>
            Gets transactions by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="planId">Plan Id</param>
            <returns>List with transactions</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Subscriptions.Transactions.ReadRepository.GetTransactionAsync(System.Int32)">
            <summary>
            Gets transactions by id
            </summary>
            <param name="transactionId">Transaction ID</param>
            <returns>Transaction details or error message</returns>
        </member>
        <member name="T:FeChat.Models.Repositories.Websites.WebsitesRepository">
            <summary>
            Websites Repository
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Websites.WebsitesRepository._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="F:FeChat.Models.Repositories.Websites.WebsitesRepository._context">
            <summary>
            Websites table context container
            </summary>   
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,FeChat.Utils.Configuration.Db)">
            <summary>
            Entity Constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
            <param name="db">Db connection instance</param>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.SaveAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Save a website
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Website ID</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.UpdateWebsiteAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Update a website
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Boolean and error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.UpdateChatAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Update a website chat
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Boolean and error message</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.GetWebsitesAsync(System.Int32,FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets all websites
            </summary>
            <param name="memberId">Member ID</param>
            <param name="searchDto">Search parameters</param>
            <returns>List with websites</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.GetWebsiteByDomainAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Get website by domain
            </summary>
            <param name="websiteDto">Website data</param>
            <returns>Website if exists</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.GetWebsiteAsync(System.Int32,System.Int32)">
            <summary>
            Get website data
            </summary>
            <param name="memberId">Member ID</param>
            <param name="websiteId">Website ID</param>
            <returns>WebsiteDto with website's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.GetWebsiteInfoAsync(System.Int32)">
            <summary>
            Get website data for public
            </summary>
            <param name="websiteId">Website ID</param>
            <returns>WebsiteDto with website's data</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.DeleteWebsiteAsync(System.Int32,System.Int32)">
            <summary>
            Delete website
            </summary>
            <param name="websiteId">Website ID</param>
            <param name="memberId">Member ID</param>
            <returns>Bool true if the website was deleted</returns>
        </member>
        <member name="M:FeChat.Models.Repositories.Websites.WebsitesRepository.DeleteMemberWebsitesAsync(System.Int32)">
            <summary>
            Delete member websites
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Program">
            <summary>
            Program class for main entry
            </summary>
        </member>
        <member name="M:FeChat.Program.Main(System.String[])">
            <summary>
            Main class used as entry point for the app
            </summary>
            <param name="args">
            Command-line arguments passed when the application is started
            </param>
            <returns>
            void
            </returns>
        </member>
        <member name="T:FeChat.Utils.Configuration.Db">
            <summary>
            Database connection
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Attachments">
            <summary>
            Set the entity for Attachments
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Events">
            <summary>
            Set the entity for Events
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Guests">
            <summary>
            Set the entity for Guests
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Members">
            <summary>
            Set the entity for Members
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.MembersOptions">
            <summary>
            Set the entity for Members Options
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Messages">
            <summary>
            Set the entity for Messages
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Plans">
            <summary>
            Set the entity for Plans
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.PlansMeta">
            <summary>
            Set the entity for Plans Meta
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.PlansRestrictions">
            <summary>
            Set the entity for Plans Restrictions
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.PlansFeatures">
            <summary>
            Set the entity for Plans Features
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Settings">
            <summary>
            Set the entity for Settings
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Subscriptions">
            <summary>
            Set the entity for Subscriptions
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.SubscriptionsMeta">
            <summary>
            Set the entity for Subscriptions Meta
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Transactions">
            <summary>
            Set the entity for Transactions
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Threads">
            <summary>
            Set the entity for Threads
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Typing">
            <summary>
            Set the entity for Typing
            </summary>
        </member>
        <member name="P:FeChat.Utils.Configuration.Db.Websites">
            <summary>
            Set the entity for Websites
            </summary>
        </member>
        <member name="F:FeChat.Utils.Configuration.Db._configuration">
            <summary>
            Configuration container
            </summary>
        </member>
        <member name="M:FeChat.Utils.Configuration.Db.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{FeChat.Utils.Configuration.Db},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class Constructor
            </summary>
            <param name="options">The entity framework settings</param>
            <param name="configuration">Contains the configuration settongs</param>
        </member>
        <member name="M:FeChat.Utils.Configuration.Db.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Members table connection
            </summary>
            <param name="optionsBuilder">The entity framework settings builder</param>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Payments.ReadPayment">
            <summary>
            Read Payments Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Payments.ReadPayment.GetAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Get a Payment
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="payPalPaymentId">Payment Id</param>
            <returns>Payment data or error</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Plans.CreatePlan">
            <summary>
            Create Plans Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Plans.CreatePlan.CreateAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Create a plan
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="planId">Plan Id</param>
            <param name="payPalProductId">PayPal Product Id</param>
            <param name="planPrice">Plan Price</param>
            <param name="planCurrency">Plan Currency</param>
            <returns>Plan ID or error</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Plans.ReadPlan">
            <summary>
            Read Plans Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Plans.ReadPlan.ReadAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Read a plan
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="payPalPlanId">Plan Id</param>
            <returns>Plan's data or error</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Products.CreateProduct">
            <summary>
            Create Products Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Products.CreateProduct.CreateAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Int32)">
            <summary>
            Create a product
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="planId">Plan Id</param>
            <returns>Product ID or error</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Subscriptions.CancelSubscription">
            <summary>
            PayPal Cancel Subscription
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Subscriptions.CancelSubscription.CancelAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Cancel Subscription
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="subscriptionId">Subscription ID</param>
            <returns>Subscription details or error message</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Subscriptions.ReadSubscription">
            <summary>
            PayPal Read Subscription
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Subscriptions.ReadSubscription.GetAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Read Subscription
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="accessToken">Access Token for PayPal</param>
            <param name="subscriptionId">Subscription ID</param>
            <returns>Subscription details or error message</returns>
        </member>
        <member name="T:FeChat.Utils.Gateways.PayPal.Tokens">
            <summary>
            Tokens Generation Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.Gateways.PayPal.Tokens.GenerateAsync(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            General access token
            </summary>
            <param name="optionsList">Website Options</param>
            <returns>Return access token or error message</returns>
        </member>
        <member name="T:FeChat.Utils.General.Access">
            <summary>
            Access Validator
            </summary>
        </member>
        <member name="F:FeChat.Utils.General.Access._httpContext">
            <summary>
            Http Context container
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Access.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Access Constructor
            </summary>
            <param name="httpContext">Http context</param>
        </member>
        <member name="M:FeChat.Utils.General.Access.IsAdminAsync(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Check if the member is admin
            </summary>
            <returns>Member dto or error message</returns>
        </member>
        <member name="M:FeChat.Utils.General.Access.IsUserAsync(FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository)">
            <summary>
            Check if the member is user
            </summary>
            <returns>Member dto or error message</returns>
        </member>
        <member name="T:FeChat.Utils.General.Antiforgery">
            <summary>
            Antiforgery Validator
            </summary>
        </member>
        <member name="F:FeChat.Utils.General.Antiforgery._httpContext">
            <summary>
            Http Context container
            </summary>
        </member>
        <member name="F:FeChat.Utils.General.Antiforgery._configuration">
            <summary>
            Container for app's configuration
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Antiforgery.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Antiforgery Constructor
            </summary>
            <param name="httpContext">Http context</param>
            <param name="configuration">App configuration</param>
        </member>
        <member name="M:FeChat.Utils.General.Antiforgery.Validate">
            <summary>
            Validates an antiforgery token
            </summary>
            <returns>Bool true or false</returns>
        </member>
        <member name="T:FeChat.Utils.General.Background">
            <summary>
            Background Service Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Background.#ctor(System.IServiceProvider)">
            <summary>
            Class Constructor
            </summary>
            <param name="serviceProvider">Services holder</param>
        </member>
        <member name="M:FeChat.Utils.General.Background.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Ovveride the BackgroundService method
            </summary>
            <param name="stoppingToken">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:FeChat.Utils.General.Cache">
            <summary>
            Caches Manager
            </summary>
        </member>
        <member name="F:FeChat.Utils.General.Cache._memoryCache">
            <summary>
            Memory cache container
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Cache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Members repository constructor
            </summary>
            <param name="memoryCache">Membery cache instance</param>
        </member>
        <member name="M:FeChat.Utils.General.Cache.Save(System.String,System.String)">
            <summary>
            Save cache list
            </summary>
            <param name="cacheGroup">Name of the group</param>
            <param name="cacheKey">Name of the cache</param>
        </member>
        <member name="M:FeChat.Utils.General.Cache.Remove(System.String)">
            <summary>
            Remove cache by group
            </summary>
            <param name="cacheGroup">Name of the group</param>
        </member>
        <member name="T:FeChat.Utils.General.Encryptor">
            <summary>
            Encryptor Class
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Encryptor.Encrypt(System.String,System.String)">
            <summary>
            Encrypt a string
            </summary>
            <param name="plainText">Text to encrypt</param>
            <param name="encryptionKey">Key for encryption</param>
            <returns>Encoded string</returns>
        </member>
        <member name="M:FeChat.Utils.General.Encryptor.Decrypt(System.String,System.String)">
            <summary>
            Decrypt a string
            </summary>
            <param name="cipherText">String to decrypt</param>
            <param name="encryptionKey">Key for encryption</param>
            <returns>Decoded string</returns>
        </member>
        <member name="M:FeChat.Utils.General.Encryptor.GetKeyBytes(System.Security.Cryptography.SymmetricAlgorithm,System.String)">
            <summary>
            Get bytes from encryption key
            </summary>
            <param name="algorithm">SymmetricAlgorithm</param>
            <param name="encryptionKey">Key for encryption</param>
            <returns>Bytes</returns>
        </member>
        <member name="T:FeChat.Utils.General.ErrorMessages">
            <summary>
            Errors Messages Manager
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PasswordLength">
            <summary>
            Error message for wrong password length
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PasswordRequired">
            <summary>
            Error message if password is missing
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PasswordNoSpaces">
            <summary>
            Error message if password contains empty spaces
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.EmailLong">
            <summary>
            Error message if email address is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.EmailRequired">
            <summary>
            Error message if email address is missing
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.EmailNotValid">
            <summary>
            Error message if the email is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.IncorrectNumber">
            <summary>
            Error message if the number is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.WebsiteNameLong">
            <summary>
            Error message if the website name is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.DomainLong">
            <summary>
            Error message if the website domain is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.UrlNotValid">
            <summary>
            Error message if the url is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.UrlLong">
            <summary>
            Error message if the url is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.AnalyticsCodeLong">
            <summary>
            Error message if the analytics code is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.SmtpHostLong">
            <summary>
            Error message if the smtp host is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.SmtpPortLong">
            <summary>
            Error message if the smtp port is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.SmtpPasswordLong">
            <summary>
            Error message if the smtp password is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.SmtpProtectionLong">
            <summary>
            Error message if the smtp protection is wrong
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PayPalClientIdLong">
            <summary>
            Error message if the paypal client id is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PayPalClientSecretLong">
            <summary>
            Error message if the paypal client secret is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.FirstNameLong">
            <summary>
            Error message if the first name is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.LastNameLong">
            <summary>
            Error message if the last name is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.MemberPhoneLong">
            <summary>
            Error message if the phone is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.MemberLanguageLong">
            <summary>
            Error message if the language word is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.IncorrectPage">
            <summary>
            Error message for incorrect page number
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.IncorrectRole">
            <summary>
            Error message for incorrect role value
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PlanNameLong">
            <summary>
            Plan name is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PlanPriceLong">
            <summary>
            Plan price is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PlanCurrencyLong">
            <summary>
            Plan currency is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.ResetCodeLong">
            <summary>
            Reset code is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.MessageLong">
            <summary>
            Message is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.ThreadSecretLong">
            <summary>
            Thread secret is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.ChatHeaderLong">
            <summary>
            Chat header is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.GuestNameLong">
            <summary>
            Guest name is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.PaymentSourceNotValid">
            <summary>
            Payment source is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.OrderIdNotValid">
            <summary>
            Order id is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.SubscriptionIdNotValid">
            <summary>
            Subscription id is not valid
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.ReCaptchaKeyLong">
            <summary>
            ReCaptcha Key is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.GoogleClientIdLong">
            <summary>
            Google Client Id is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.GoogleClientSecretLong">
            <summary>
            Google Secret Key is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.GoogleMapsKeyLong">
            <summary>
            Google Maps Key is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.Ip2LocationLong">
            <summary>
            Ip2Location Key is too long
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.ErrorMessages.CodeLong">
            <summary>
            Code is too long
            </summary>
        </member>
        <member name="T:FeChat.Utils.General.ImageUpload">
            <summary>
            This class has the scope to upload images for both users and administrators
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.UploadAsync(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload the image
            </summary>
            <param name="configuration">App configuration</param>
            <param name="file">Uploaded file</param>
            <returns>Url of the uploaded file or null</returns>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.IsFileContentValid(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{System.String})">
            <summary>
            Check if file content is valid
            </summary>
            <param name="file">Uploaded file</param>
            <param name="allowedContentTypes">Allowed formats</param>
            <returns></returns>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.HasFileSignature(System.Byte[],System.String)">
            <summary>
            Verify if the signature is correct
            </summary>
            <param name="fileSignature">Uploaded file signature</param>
            <param name="allowedContentType">Allowed format for file</param>
            <returns></returns>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.HasJPEGSignature(System.Byte[])">
            <summary>
            Check if the uploaded file is a valif jpeg
            </summary>
            <param name="fileSignature">File signature</param>
            <returns>Boolean true if the signature is correct</returns>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.HasGIFSignature(System.Byte[])">
            <summary>
            Check if the uploaded file is a valif gif
            </summary>
            <param name="fileSignature">File signature</param>
            <returns>Boolean true if the signature is correct</returns>
        </member>
        <member name="M:FeChat.Utils.General.ImageUpload.HasPNGSignature(System.Byte[])">
            <summary>
            Check if the uploaded file is a valif png
            </summary>
            <param name="fileSignature">File signature</param>
            <returns>Boolean true if the signature is correct</returns>
        </member>
        <member name="T:FeChat.Utils.General.IpLookup">
            <summary>
            Ip Lookup
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.IpLookup.GetIpData(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Get data from IP
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="ip">IP</param>
            <returns>Ip information or error message</returns>
        </member>
        <member name="T:FeChat.Utils.General.Member">
            <summary>
            Member Holder
            </summary>
        </member>
        <member name="P:FeChat.Utils.General.Member.Info">
            <summary>
            Member Data container
            </summary>
        </member>
        <member name="T:FeChat.Utils.General.RemoveUnversionedUrlsFilter">
            <summary>
            Class used to remove the unversioned urls from Swagger
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.RemoveUnversionedUrlsFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Remove unversioned urls in a OpenApi document
            </summary>
            <param name="swaggerDoc">OpenApiDocument swaggerDoc - swagger document</param>
            <param name="context">DocumentFilterContext context - current context</param>
        </member>
        <member name="T:FeChat.Utils.General.Sanitize">
            <summary>
            Sanitize data
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Sanitize.String(System.String)">
            <summary>
            Sanitize string
            </summary>
            <param name="text">Text which should be sanitized</param>
            <returns>Sanitized text</returns>
        </member>
        <member name="T:FeChat.Utils.General.Sender">
            <summary>
            Antiforgery Validator
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Sender.Send(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            Send email
            </summary>
            <param name="optionsList">Website Options</param>
            <param name="to">Email Receiver</param>
            <param name="subject">Email Subject</param>
            <param name="body">Email Body</param>
            <returns>Bool true or false</returns>
        </member>
        <member name="T:FeChat.Utils.General.Strings">
            <summary>
            This class was created to manage better the strings
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Strings.Get(System.String)">
            <summary>
            Get a string by name and culture
            </summary>
            <param name="name">Name of the string</param>
            <returns>string with value</returns>
        </member>
        <member name="T:FeChat.Utils.General.Tokens">
            <summary>
            This class provides some methods to works with the Jwt tokens
            </summary>
        </member>
        <member name="M:FeChat.Utils.General.Tokens.GetTokenData(System.String,System.String)">
            <summary>
            Get token data by claim field
            </summary>
            <param name="accessToken">Access token</param>
            <param name="field">Token field</param>
            <returns>string with field's data</returns>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository">
            <summary>
            Interface for Events Repository
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository.CreateEventAsync(System.Int32,System.Int32)">
            <summary>
            Create an event
            </summary>
            <param name="memberId">Member ID</param>
            <param name="typeId">Type ID</param>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository.GetEventsAsync(System.Int32,System.Int32)">
            <summary>
            Gets events from the database
            </summary>
            <param name="memberId">Member Id</param>
            <param name="time">Time for events reading</param>
            <returns>List with events or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Events.IEventsRepository.DeleteMemberEventsAsync(System.Int32)">
            <summary>
            Delete member events
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository">
            <summary>
            Members Interface
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.CreateMemberAsync(FeChat.Models.Dtos.Members.NewMemberDto)">
            <summary>
            Create a member
            </summary>
            <param name="newMemberDto">RegistrationDto dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.UpdateMemberAsync(FeChat.Models.Entities.Members.MemberEntity)">
            <summary>
            Update a member
            </summary>
            <param name="Member">Member entity with the member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.UpdateEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member email
            </summary>
            <param name="Member">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.UpdatePasswordAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Update a member password
            </summary>
            <param name="Member">Member's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.SignIn(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Check if the member and password is correct
            </summary>
            <param name="Member">SignInDto dto with the member's data</param>
            <returns>Response with member data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMembersAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets all members
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMembersByTimeAsync(System.Int32)">
            <summary>
            Gets all members by time
            </summary>
            <param name="time">Time filter</param>
            <returns>List with members</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMembersForExportAsync">
            <summary>
            Gets all members for export
            </summary>
            <returns>List with all members</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMemberAsync(System.Int32)">
            <summary>
            Get member data
            </summary>
            <param name="MemberId">Member Id</param>
            <returns>Member's data if member exists</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMemberEmailAsync(FeChat.Models.Dtos.Members.MemberDto)">
            <summary>
            Get member email
            </summary>
            <param name="memberDto">Member data</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMemberByCodeAsync(System.String)">
            <summary>
            Get member by reset code
            </summary>
            <param name="code">Reset code</param>
            <returns>Member with email if exists</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.DeleteMemberAsync(System.Int32)">
            <summary>
            Delete member
            </summary>
            <param name="memberId">Member ID</param>
            <returns>Bool true if the member was deleted</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.SaveOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Save bulk options for Members
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.UpdateOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Members.MemberOptionsEntity})">
            <summary>
            Update bulk options
            </summary>
            <param name="optionsList">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.OptionsListAsync(System.Int32)">
            <summary>
            Get the options list
            </summary>
            <param name="MemberId">Member's ID</param>
            <returns>Get the options list</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Members.IMembersRepository.GetMemberOptionWithGoogle(System.String)">
            <summary>
            Get Member Option with Google ID
            </summary>
            <param name="googleId">Google ID</param>
            <returns>Option of the user or error message</returns>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository">
            <summary>
            Interface for Messages Repository
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.CreateMessageAsync(FeChat.Models.Dtos.Messages.MessageDto)">
            <summary>
            Create a message
            </summary>
            <param name="messageDto">Contains message data</param>
            <returns>Response with message id and message text</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.MessagesListAsync(FeChat.Models.Dtos.Messages.MessagesListDto)">
            <summary>
            Get the messages list
            </summary>
            <param name="messagesListDto">Parameters for messages list</param>
            <returns>List with messages or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.MessagesUnseenAsync(System.Int32,System.Int32)">
            <summary>
            Get unseen messages by thread
            </summary>
            <param name="ThreadId">Thread ID where will be looked for unseen messages</param>
            <param name="MemberId">Member ID which has unseen messages</param>
            <returns>Bool and error message if exists</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.AllMessagesUnseenAsync">
            <summary>
            Get unseen messages by thread
            </summary>
            <returns>Unseen messages or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.DeleteMessageAsync(System.Int32)">
            <summary>
            Delete message
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Bool true if the message was deleted</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.CreateGuestAsync(FeChat.Models.Dtos.Messages.GuestDto)">
            <summary>
            Create Guests
            </summary>
            <param name="guestDto">Guest information</param>
            <returns>Response with guest id or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.CreateThreadAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Create Threads
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread secret and id or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetThreadsAsync(FeChat.Models.Dtos.SearchDto,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets all threads
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="memberId">Member Id</param>
            <param name="websiteId">Website ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetHotThreadsAsync(System.Int32)">
            <summary>
            Gets last 5 updated threads
            </summary>
            <param name="memberId">Member ID</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetThreadsByTimeAsync(System.Int32,System.Int32)">
            <summary>
            Gets all threads by time
            </summary>
            <param name="memberId">Member ID</param>
            <param name="time">Time filter</param>
            <returns>List with threads</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetThreadByWebsiteIdAsync(FeChat.Models.Dtos.Messages.ThreadDto)">
            <summary>
            Get thread by website's id and thread secret
            </summary>
            <param name="threadDto">Thread information</param>
            <returns>Response with thread or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetThreadAsync(System.Int32,System.Int32)">
            <summary>
            Get thread data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>ThreadDto with thread's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.DeleteThreadAsync(System.Int32,System.Int32)">
            <summary>
            Delete thread
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>Bool true if the thread was deleted</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.SaveTypingAsync(System.Int32,System.Int32)">
            <summary>
            Save typing
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.UpdateTypingAsync(System.Int32)">
            <summary>
            Update Typing ID
            </summary>
            <param name="typingId">Typing Id</param>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.GetTypingAsync(System.Int32,System.Int32)">
            <summary>
            Get typing data
            </summary>
            <param name="threadId">Thread ID</param>
            <param name="memberId">Member ID which is owner of the thread</param>
            <returns>typing data or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Messages.IMessagesRepository.CreateAttachment(FeChat.Models.Dtos.Messages.AttachmentDto)">
            <summary>
            Create attachment
            </summary>
            <param name="attachmentDto">Attachment data</param>
            <returns>Saved attachment data or message</returns>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository">
            <summary>
            Repository for Plans
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.CreatePlanAsync(FeChat.Models.Dtos.Plans.PlanDto)">
            <summary>
            Create a plan
            </summary>
            <param name="planDto">Contains the plan's data</param>
            <returns>Plan ID</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.SavePlanMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Save bulk plans meta
            </summary>
            <param name="metaEntities">Meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.UpdatePlanAsync(FeChat.Models.Entities.Plans.PlanEntity)">
            <summary>
            Update a plan
            </summary>
            <param name="planEntity">Plan entity with the plan's data</param>
            <returns>Return response bool and with message if errors is catched</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.UpdateMetaAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansMetaEntity})">
            <summary>
            Update bulk meta
            </summary>
            <param name="meta">Plans meta list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.GetAllPlansAsync">
            <summary>
            Gets all plans
            </summary>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.GetPlansByPageAsync(FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets plans by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <returns>List with plans</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.GetPlanAsync(System.Int32)">
            <summary>
            Get plan data
            </summary>
            <param name="planId">Plan ID</param>
            <returns>PlanDto with plan's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.MetaListAsync(System.Int32)">
            <summary>
            Get the plans meta
            </summary>
            <param name="planId">Plan Id</param>
            <returns>The meta list or null</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.DeletePlanAsync(System.Int32)">
            <summary>
            Delete plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool true if the plan was deleted</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.SaveRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Save bulk restrictions
            </summary>
            <param name="restrictions">Members restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.UpdateRestrictionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansRestrictionsEntity})">
            <summary>
            Update bulk restrictions
            </summary>
            <param name="restrictions">Settings restrictions list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.RestrictionsListAsync(System.Int32)">
            <summary>
            Get the plan restrictions
            </summary>
            <param name="PlanId">Plan ID</param>
            <returns>The restrictions list or null</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.SaveFeaturesAsync(System.Collections.Generic.List{FeChat.Models.Entities.Plans.PlansFeaturesEntity})">
            <summary>
            Save bulk features
            </summary>
            <param name="features">Plan features list</param>
            <returns>Boolean response or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.FeaturesListAsync(System.Int32)">
            <summary>
            Get the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>The features list or null</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Plans.IPlansRepository.FeaturesDeleteAsync(System.Int32)">
            <summary>
            Delete the plan features
            </summary>
            <param name="planId">Plan ID</param>
            <returns>Bool or error message</returns>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository">
            <summary>
            Interface for Settings Repository
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository.SaveOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Settings.SettingsEntity})">
            <summary>
            Save bulk options
            </summary>
            <param name="options">Members options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository.UpdateOptionsAsync(System.Collections.Generic.List{FeChat.Models.Entities.Settings.SettingsEntity})">
            <summary>
            Update bulk options
            </summary>
            <param name="options">Settings options list</param>
            <returns>Boolean response</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Settings.ISettingsRepository.OptionsListAsync">
            <summary>
            Get the settings options
            </summary>
            <returns>The options list or null</returns>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository">
            <summary>
            Repository for Subscriptions
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.CreateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Create a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Subscription id or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.CreateTransactionAsync(FeChat.Models.Dtos.Transactions.TransactionDto)">
            <summary>
            Create a transaction
            </summary>
            <param name="transactionDto">Transaction information</param>
            <returns>Transaction id or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.UpdateSubscriptionAsync(FeChat.Models.Dtos.Subscriptions.SubscriptionDto)">
            <summary>
            Update a subscription
            </summary>
            <param name="subscriptionDto">Subscription information</param>
            <returns>Bool and error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.GetSubscriptionByMemberIdAsync(System.Int32)">
            <summary>
            Get a subscription for a user
            </summary>
            <param name="memberId">Member ID</param>
            <returns>SubscriptionDto with subscription's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.GetSubscriptionsByPlanIdAsync(System.Int32)">
            <summary>
            Get subscriptions by plan
            </summary>
            <param name="planId">Plan ID</param>
            <returns>SubscriptionDto with subscription's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.GetSubscriptionByNetIdAsync(System.String)">
            <summary>
            Get subscriptions by net id
            </summary>
            <param name="netId">Net ID</param>
            <returns>Subscription data or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.DeleteMemberSubscriptionsAsync(System.Int32)">
            <summary>
            Delete member's subscriptions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.GetTransactionsByPageAsync(FeChat.Models.Dtos.SearchDto,System.Nullable{System.Int32})">
            <summary>
            Gets transactions by page
            </summary>
            <param name="searchDto">Search parameters</param>
            <param name="planId">Plan Id</param>
            <returns>List with transactions</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.GetTransactionAsync(System.Int32)">
            <summary>
            Gets transactions by id
            </summary>
            <param name="transactionId">Transaction ID</param>
            <returns>Transaction details or error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Subscriptions.ISubscriptionsRepository.DeleteMemberTransactionsAsync(System.Int32)">
            <summary>
            Delete the Member transactions
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository">
            <summary>
            Interface for Websites Repository
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.SaveAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Save a website
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Website ID</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.UpdateWebsiteAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Update a website
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Boolean and error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.UpdateChatAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Update a website chat
            </summary>
            <param name="websiteDto">Contains the website's data</param>
            <returns>Boolean and error message</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.GetWebsitesAsync(System.Int32,FeChat.Models.Dtos.SearchDto)">
            <summary>
            Gets all websites
            </summary>
            <param name="memberId">Member ID</param>
            <param name="searchDto">Search parameters</param>
            <returns>List with websites</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.GetWebsiteByDomainAsync(FeChat.Models.Dtos.Websites.NewWebsiteDto)">
            <summary>
            Get website by domain
            </summary>
            <param name="websiteDto">Website data</param>
            <returns>Website if exists</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.GetWebsiteAsync(System.Int32,System.Int32)">
            <summary>
            Get website data
            </summary>
            <param name="memberId">Member ID</param>
            <param name="websiteId">Website ID</param>
            <returns>WebsiteDto with website's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.GetWebsiteInfoAsync(System.Int32)">
            <summary>
            Get website data for public
            </summary>
            <param name="websiteId">Website ID</param>
            <returns>WebsiteDto with website's data</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.DeleteWebsiteAsync(System.Int32,System.Int32)">
            <summary>
            Delete website
            </summary>
            <param name="websiteId">Website ID</param>
            <param name="memberId">Member ID</param>
            <returns>Bool true if the website was deleted</returns>
        </member>
        <member name="M:FeChat.Utils.Interfaces.Repositories.Websites.IWebsitesRepository.DeleteMemberWebsitesAsync(System.Int32)">
            <summary>
            Delete member websites
            </summary>
            <param name="memberId">Member ID</param>
        </member>
        <member name="T:FeChat.Utils.Interfaces.IStorage">
            <summary>
            Interface for Storage
            </summary>
        </member>
        <member name="M:FeChat.Utils.Interfaces.IStorage.UploadAsync(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload the file on external storage
            </summary>
            <param name="configuration">App configuration</param>
            <param name="file">Uploaded file</param>
            <returns>Url of the uploaded file or null</returns>
        </member>
        <member name="T:FeChat.Utils.Storage.ImgurStorage">
            <summary>
            Imgur Uploader
            </summary>
        </member>
        <member name="M:FeChat.Utils.Storage.ImgurStorage.UploadAsync(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload the file on external storage
            </summary>
            <param name="configuration">App configuration</param>
            <param name="file">Uploaded file</param>
            <returns>Url of the uploaded file or null</returns>
        </member>
        <member name="T:FeChat.Utils.Validations.NumberValidationAttribute">
            <summary>
            Create a custom Validation for numbers
            </summary>
        </member>
        <member name="P:FeChat.Utils.Validations.NumberValidationAttribute.Minimum">
            <summary>
            Minimum allowed number
            </summary>
        </member>
        <member name="P:FeChat.Utils.Validations.NumberValidationAttribute.Maximum">
            <summary>
            Maximum allowed number
            </summary>
        </member>
        <member name="P:FeChat.Utils.Validations.NumberValidationAttribute.ErrorMessage">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="M:FeChat.Utils.Validations.NumberValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Check if the value is valid
            </summary>
            <param name="value">Received value</param>
            <param name="validationContext">Describes the context in which a validation check is performed.</param>
            <returns>True if the value is correct or false</returns>
        </member>
        <member name="T:FeChat.Utils.Validations.UrlValidationAttribute">
            <summary>
            Create a custom Validation for urls
            </summary>
        </member>
        <member name="M:FeChat.Utils.Validations.UrlValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Check if the value is valid
            </summary>
            <param name="value">Received value</param>
            <param name="validationContext">Describes the context in which a validation check is performed.</param>
            <returns>True if the value is correct or false</returns>
        </member>
        <member name="T:api.Migrations._001">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._001.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._001.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._001.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._002">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._002.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._002.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._002.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._003">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._003.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._003.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._003.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._004">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._004.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._004.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._004.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._005">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._005.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._005.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._005.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._006">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._006.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._006.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._006.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._007">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._007.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._007.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._007.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._008">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._008.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._008.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._008.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._009">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._009.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._009.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._009.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._010">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._010.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._010.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._010.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._011">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._011.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._011.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._011.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._012">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._012.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._012.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._012.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._013">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._013.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._013.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._013.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._014">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._014.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._014.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._014.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._015">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._015.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._015.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._015.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._016">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._016.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._016.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._016.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._017">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._017.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._017.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._017.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._018">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._018.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._018.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._018.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._019">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._019.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._019.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._019.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._020">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._020.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._020.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._020.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._021">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._021.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._021.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._021.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._022">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._022.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._022.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._022.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._023">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._023.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._023.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._023.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._024">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._024.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._024.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._024.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._025">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._025.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._025.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._025.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._026">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._026.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._026.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._026.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._027">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._027.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._027.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._027.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._028">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._028.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._028.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._028.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._029">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._029.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._029.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._029.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._030">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._030.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._030.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._030.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._031">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._031.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._031.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._031.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._032">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._032.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._032.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._032.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._033">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._033.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._033.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._033.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._034">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._034.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._034.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._034.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._035">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._035.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._035.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._035.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:api.Migrations._036">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._036.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._036.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:api.Migrations._036.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the MyRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.MyRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
